{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red183\green111\blue179;\red24\green24\blue24;\red193\green193\blue193;
\red140\green211\blue254;\red194\green126\blue101;\red89\green138\blue67;\red70\green137\blue204;\red212\green214\blue154;
\red202\green202\blue202;\red66\green179\blue255;\red167\green197\blue152;\red67\green192\blue160;\red109\green109\blue109;
}
{\*\expandedcolortbl;;\cssrgb\c77255\c52549\c75294;\cssrgb\c12157\c12157\c12157;\cssrgb\c80000\c80000\c80000;
\cssrgb\c61176\c86275\c99608;\cssrgb\c80784\c56863\c47059;\cssrgb\c41569\c60000\c33333;\cssrgb\c33725\c61176\c83922;\cssrgb\c86275\c86275\c66667;
\cssrgb\c83137\c83137\c83137;\cssrgb\c30980\c75686\c100000;\cssrgb\c70980\c80784\c65882;\cssrgb\c30588\c78824\c69020;\cssrgb\c50196\c50196\c50196;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 React\cf4 \strokec4 , \{ \cf5 \strokec5 useEffect\cf4 \strokec4 , \cf5 \strokec5 useState\cf4 \strokec4  \} \cf2 \strokec2 from\cf4 \strokec4  \cf6 \strokec6 'react'\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \{ \cf5 \strokec5 doc\cf4 \strokec4 , \cf5 \strokec5 getDoc\cf4 \strokec4  \} \cf2 \strokec2 from\cf4 \strokec4  \cf6 \strokec6 'firebase/firestore'\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \{ \cf5 \strokec5 db\cf4 \strokec4  \} \cf2 \strokec2 from\cf4 \strokec4  \cf6 \strokec6 '../firebase'\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \{ \cf5 \strokec5 Badge\cf4 \strokec4  \} \cf2 \strokec2 from\cf4 \strokec4  \cf6 \strokec6 '@/components/ui/Badge'\cf4 \strokec4 ; \cf7 \strokec7 // if used\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 function\cf4 \strokec4  \cf9 \strokec9 JobDetailsModal\cf4 \strokec4 (\{ \cf5 \strokec5 job\cf4 \strokec4 , \cf5 \strokec5 onClose\cf4 \strokec4  \}) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 if\cf4 \strokec4  (\cf10 \strokec10 !\cf5 \strokec5 job\cf4 \strokec4 ) \cf2 \strokec2 return\cf4 \strokec4  \cf8 \strokec8 null\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf7 \strokec7 // \uc0\u55358 \u56800  Utilities\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf9 \strokec9 getJobTypeName\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  (\cf5 \strokec5 job\cf4 \strokec4 ) \cf8 \strokec8 =>\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 typeof\cf4 \strokec4  \cf5 \strokec5 job\cf4 \strokec4 .\cf5 \strokec5 jobType\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'string'\cf4 \strokec4  \cf10 \strokec10 ?\cf4 \strokec4  \cf5 \strokec5 job\cf4 \strokec4 .\cf5 \strokec5 jobType\cf4 \strokec4  \cf10 \strokec10 :\cf4 \strokec4  \cf5 \strokec5 job\cf4 \strokec4 .\cf5 \strokec5 jobType\cf4 \strokec4 ?.\cf5 \strokec5 name\cf4 \strokec4  \cf10 \strokec10 ||\cf4 \strokec4  \cf6 \strokec6 ''\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf8 \strokec8 const\cf4 \strokec4  [\cf11 \strokec11 fieldBoundary\cf4 \strokec4 , \cf9 \strokec9 setFieldBoundary\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 useState\cf4 \strokec4 (\cf8 \strokec8 null\cf4 \strokec4 );\cb1 \
\cb3   \cf8 \strokec8 const\cf4 \strokec4  [\cf11 \strokec11 fieldBoundaries\cf4 \strokec4 , \cf9 \strokec9 setFieldBoundaries\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 useState\cf4 \strokec4 ([]);\cb1 \
\
\cb3   \cf7 \strokec7 // \uc0\u55357 \u56550  Load Field Boundary\cf4 \cb1 \strokec4 \
\cb3   \cf9 \strokec9 useEffect\cf4 \strokec4 (() \cf8 \strokec8 =>\cf4 \strokec4  \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 fieldId\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 job\cf4 \strokec4 ?.\cf5 \strokec5 fieldId\cf4 \strokec4  \cf10 \strokec10 ||\cf4 \strokec4  \cf5 \strokec5 job\cf4 \strokec4 ?.\cf5 \strokec5 fields\cf4 \strokec4 ?.[\cf12 \strokec12 0\cf4 \strokec4 ]?.\cf5 \strokec5 id\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 if\cf4 \strokec4  (\cf10 \strokec10 !\cf11 \strokec11 fieldId\cf4 \strokec4 ) \cf2 \strokec2 return\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 const\cf4 \strokec4  \cf9 \strokec9 loadBoundary\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 async\cf4 \strokec4  () \cf8 \strokec8 =>\cf4 \strokec4  \{\cb1 \
\cb3       \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3         \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 fieldRef\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 doc\cf4 \strokec4 (\cf11 \strokec11 db\cf4 \strokec4 , \cf6 \strokec6 'fields'\cf4 \strokec4 , \cf11 \strokec11 fieldId\cf4 \strokec4 );\cb1 \
\cb3         \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 snap\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf9 \strokec9 getDoc\cf4 \strokec4 (\cf11 \strokec11 fieldRef\cf4 \strokec4 );\cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  (\cf10 \strokec10 !\cf11 \strokec11 snap\cf4 \strokec4 .\cf9 \strokec9 exists\cf4 \strokec4 ()) \cf2 \strokec2 return\cf4 \strokec4 ;\cb1 \
\
\cb3         \cf8 \strokec8 let\cf4 \strokec4  \cf5 \strokec5 geo\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf11 \strokec11 snap\cf4 \strokec4 .\cf9 \strokec9 data\cf4 \strokec4 ()?.\cf5 \strokec5 boundary\cf4 \strokec4 ?.\cf5 \strokec5 geojson\cf4 \strokec4 ;\cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 typeof\cf4 \strokec4  \cf5 \strokec5 geo\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'string'\cf4 \strokec4 ) \{\cb1 \
\cb3           \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3             \cf5 \strokec5 geo\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 JSON\cf4 \strokec4 .\cf9 \strokec9 parse\cf4 \strokec4 (\cf5 \strokec5 geo\cf4 \strokec4 );\cb1 \
\cb3           \} \cf2 \strokec2 catch\cf4 \strokec4  \{\cb1 \
\cb3             \cf5 \strokec5 console\cf4 \strokec4 .\cf9 \strokec9 warn\cf4 \strokec4 (\cf6 \strokec6 '\uc0\u10060  Could not parse field geojson'\cf4 \strokec4 );\cb1 \
\cb3             \cf2 \strokec2 return\cf4 \strokec4 ;\cb1 \
\cb3           \}\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 geo\cf4 \strokec4 ?.\cf5 \strokec5 type\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'Feature'\cf4 \strokec4 ) \cf5 \strokec5 geo\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 geo\cf4 \strokec4 .\cf5 \strokec5 geometry\cf4 \strokec4 ;\cb1 \
\cb3         \cf9 \strokec9 setFieldBoundary\cf4 \strokec4 (\cf5 \strokec5 geo\cf4 \strokec4 );\cb1 \
\cb3         \cf9 \strokec9 setFieldBoundaries\cf4 \strokec4 ([\cf5 \strokec5 geo\cf4 \strokec4 ]);\cb1 \
\
\cb3       \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 err\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf6 \strokec6 '\uc0\u10060  Error loading field boundary'\cf4 \strokec4 , \cf5 \strokec5 err\cf4 \strokec4 );\cb1 \
\cb3       \}\cb1 \
\cb3     \};\cb1 \
\
\cb3     \cf9 \strokec9 loadBoundary\cf4 \strokec4 ();\cb1 \
\cb3   \}, [\cf5 \strokec5 job\cf4 \strokec4 ]);\cb1 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 useEffect\cf4 \strokec4 (() \cf8 \strokec8 =>\cf4 \strokec4  \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf9 \strokec9 loadAllBoundaries\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 async\cf4 \strokec4  () \cf8 \strokec8 =>\cf4 \strokec4  \{\cb1 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf10 \strokec10 !\cf13 \strokec13 Array\cf4 \strokec4 .\cf9 \strokec9 isArray\cf4 \strokec4 (\cf5 \strokec5 job\cf4 \strokec4 .\cf5 \strokec5 fields\cf4 \strokec4 )) \cf2 \strokec2 return\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 boundaries\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  [];\cb1 \
\cb3     \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 polygons\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  [];\cb1 \
\
\cb3     \cf2 \strokec2 await\cf4 \strokec4  \cf13 \strokec13 Promise\cf4 \strokec4 .\cf9 \strokec9 all\cf4 \strokec4 (\cb1 \
\cb3       \cf5 \strokec5 job\cf4 \strokec4 .\cf5 \strokec5 fields\cf4 \strokec4 .\cf9 \strokec9 map\cf4 \strokec4 (\cf8 \strokec8 async\cf4 \strokec4  (\cf5 \strokec5 f\cf4 \strokec4 ) \cf8 \strokec8 =>\cf4 \strokec4  \{\cb1 \
\cb3         \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3           \cf7 \strokec7 // \uc0\u55357 \u56629  Pull static boundary from Fields\cf4 \cb1 \strokec4 \
\cb3           \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 fieldSnap\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf9 \strokec9 getDoc\cf4 \strokec4 (\cf9 \strokec9 doc\cf4 \strokec4 (\cf11 \strokec11 db\cf4 \strokec4 , \cf6 \strokec6 'fields'\cf4 \strokec4 , \cf5 \strokec5 f\cf4 \strokec4 .\cf5 \strokec5 fieldId\cf4 \strokec4  \cf10 \strokec10 ||\cf4 \strokec4  \cf5 \strokec5 f\cf4 \strokec4 .\cf5 \strokec5 id\cf4 \strokec4 ));\cb1 \
\cb3           \cf2 \strokec2 if\cf4 \strokec4  (\cf11 \strokec11 fieldSnap\cf4 \strokec4 .\cf9 \strokec9 exists\cf4 \strokec4 ()) \{\cb1 \
\cb3             \cf8 \strokec8 let\cf4 \strokec4  \cf5 \strokec5 geo\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf11 \strokec11 fieldSnap\cf4 \strokec4 .\cf9 \strokec9 data\cf4 \strokec4 ()?.\cf5 \strokec5 boundary\cf4 \strokec4 ?.\cf5 \strokec5 geojson\cf4 \strokec4  \cf10 \strokec10 ||\cf4 \strokec4  \cf11 \strokec11 fieldSnap\cf4 \strokec4 .\cf9 \strokec9 data\cf4 \strokec4 ()?.\cf5 \strokec5 boundary\cf4 \strokec4 ;\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 typeof\cf4 \strokec4  \cf5 \strokec5 geo\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'string'\cf4 \strokec4 ) \{\cb1 \
\cb3               \cf2 \strokec2 try\cf4 \strokec4  \{ \cf5 \strokec5 geo\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 JSON\cf4 \strokec4 .\cf9 \strokec9 parse\cf4 \strokec4 (\cf5 \strokec5 geo\cf4 \strokec4 ); \} \cf2 \strokec2 catch\cf4 \strokec4  \{ \cf5 \strokec5 geo\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 null\cf4 \strokec4 ; \}\cb1 \
\cb3             \}\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 geo\cf4 \strokec4 ?.\cf5 \strokec5 type\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'Feature'\cf4 \strokec4 ) \cf5 \strokec5 geo\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 geo\cf4 \strokec4 .\cf5 \strokec5 geometry\cf4 \strokec4 ;\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 geo\cf4 \strokec4 ) \cf11 \strokec11 boundaries\cf4 \strokec4 .\cf9 \strokec9 push\cf4 \strokec4 (\cf5 \strokec5 geo\cf4 \strokec4 );\cb1 \
\cb3           \}\cb1 \
\
\cb3           \cf7 \strokec7 // \uc0\u55357 \u57314  Pull drawn polygon from JobsByField\cf4 \cb1 \strokec4 \
\cb3           \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 jobByFieldId\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 f\cf4 \strokec4 .\cf5 \strokec5 jobId\cf4 \strokec4  \cf10 \strokec10 ||\cf4 \strokec4  \cf6 \strokec6 `\cf8 \strokec8 $\{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 id\cf8 \strokec8 \}\cf6 \strokec6 _\cf8 \strokec8 $\{\cf5 \strokec5 f\cf10 \strokec10 .\cf5 \strokec5 fieldId\cf10 \strokec10  || \cf5 \strokec5 f\cf10 \strokec10 .\cf5 \strokec5 id\cf8 \strokec8 \}\cf6 \strokec6 `\cf4 \strokec4 ;\cb1 \
\cb3           \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 jobFieldSnap\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf2 \strokec2 await\cf4 \strokec4  \cf9 \strokec9 getDoc\cf4 \strokec4 (\cf9 \strokec9 doc\cf4 \strokec4 (\cf11 \strokec11 db\cf4 \strokec4 , \cf6 \strokec6 'jobsByField'\cf4 \strokec4 , \cf11 \strokec11 jobByFieldId\cf4 \strokec4 ));\cb1 \
\cb3           \cf2 \strokec2 if\cf4 \strokec4  (\cf11 \strokec11 jobFieldSnap\cf4 \strokec4 .\cf9 \strokec9 exists\cf4 \strokec4 ()) \{\cb1 \
\cb3             \cf8 \strokec8 let\cf4 \strokec4  \cf5 \strokec5 drawn\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf11 \strokec11 jobFieldSnap\cf4 \strokec4 .\cf9 \strokec9 data\cf4 \strokec4 ()?.\cf5 \strokec5 drawnPolygon\cf4 \strokec4 ;\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 typeof\cf4 \strokec4  \cf5 \strokec5 drawn\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'string'\cf4 \strokec4 ) \{\cb1 \
\cb3               \cf2 \strokec2 try\cf4 \strokec4  \{ \cf5 \strokec5 drawn\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 JSON\cf4 \strokec4 .\cf9 \strokec9 parse\cf4 \strokec4 (\cf5 \strokec5 drawn\cf4 \strokec4 ); \} \cf2 \strokec2 catch\cf4 \strokec4  \{ \cf5 \strokec5 drawn\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 null\cf4 \strokec4 ; \}\cb1 \
\cb3             \}\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 drawn\cf4 \strokec4 ?.\cf5 \strokec5 type\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'Feature'\cf4 \strokec4 ) \cf5 \strokec5 drawn\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 drawn\cf4 \strokec4 .\cf5 \strokec5 geometry\cf4 \strokec4 ;\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 drawn\cf4 \strokec4 ?.\cf5 \strokec5 type\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'Polygon'\cf4 \strokec4 ) \cf11 \strokec11 polygons\cf4 \strokec4 .\cf9 \strokec9 push\cf4 \strokec4 (\cf5 \strokec5 drawn\cf4 \strokec4 );\cb1 \
\cb3           \}\cb1 \
\
\cb3         \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 err\cf4 \strokec4 ) \{\cb1 \
\cb3           \cf5 \strokec5 console\cf4 \strokec4 .\cf9 \strokec9 error\cf4 \strokec4 (\cf6 \strokec6 '\uc0\u10060  Error loading field or polygon'\cf4 \strokec4 , \cf5 \strokec5 err\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3       \})\cb1 \
\cb3     );\cb1 \
\
\cb3     \cf9 \strokec9 setFieldBoundaries\cf4 \strokec4 (\cf11 \strokec11 boundaries\cf4 \strokec4 );\cb1 \
\cb3     \cf9 \strokec9 setParsedPolygons\cf4 \strokec4 (\cf11 \strokec11 polygons\cf4 \strokec4 );\cb1 \
\cb3   \};\cb1 \
\
\cb3   \cf9 \strokec9 loadAllBoundaries\cf4 \strokec4 ();\cb1 \
\cb3 \}, [\cf5 \strokec5 job\cf4 \strokec4 ]);\cb1 \
\
\
\cb3   \cf7 \strokec7 // \uc0\u55358 \u56830  Parse Drawn Polygon + Boundary\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 let\cf4 \strokec4  \cf5 \strokec5 parsedPolygons\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  [];\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 try\cf4 \strokec4  \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 if\cf4 \strokec4  (\cf13 \strokec13 Array\cf4 \strokec4 .\cf9 \strokec9 isArray\cf4 \strokec4 (\cf5 \strokec5 job\cf4 \strokec4 .\cf5 \strokec5 fields\cf4 \strokec4 )) \{\cb1 \
\cb3     \cf5 \strokec5 job\cf4 \strokec4 .\cf5 \strokec5 fields\cf4 \strokec4 .\cf9 \strokec9 forEach\cf4 \strokec4 ((\cf5 \strokec5 f\cf4 \strokec4 ) \cf8 \strokec8 =>\cf4 \strokec4  \{\cb1 \
\cb3       \cf8 \strokec8 let\cf4 \strokec4  \cf5 \strokec5 poly\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 f\cf4 \strokec4 .\cf5 \strokec5 drawnPolygon\cf4 \strokec4 ;\cb1 \
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 typeof\cf4 \strokec4  \cf5 \strokec5 poly\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'string'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3           \cf5 \strokec5 poly\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 JSON\cf4 \strokec4 .\cf9 \strokec9 parse\cf4 \strokec4 (\cf5 \strokec5 poly\cf4 \strokec4 );\cb1 \
\cb3         \} \cf2 \strokec2 catch\cf4 \strokec4  \{\cb1 \
\cb3           \cf2 \strokec2 return\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\cb3       \}\cb1 \
\
\cb3       \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 poly\cf4 \strokec4 ?.\cf5 \strokec5 type\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'Feature'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 parsedPolygons\cf4 \strokec4 .\cf9 \strokec9 push\cf4 \strokec4 (\cf5 \strokec5 poly\cf4 \strokec4 .\cf5 \strokec5 geometry\cf4 \strokec4 );\cb1 \
\cb3       \} \cf2 \strokec2 else\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 poly\cf4 \strokec4 ?.\cf5 \strokec5 type\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'Polygon'\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf5 \strokec5 parsedPolygons\cf4 \strokec4 .\cf9 \strokec9 push\cf4 \strokec4 (\cf5 \strokec5 poly\cf4 \strokec4 );\cb1 \
\cb3       \}\cb1 \
\cb3     \});\cb1 \
\cb3   \} \cf2 \strokec2 else\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 job\cf4 \strokec4 .\cf5 \strokec5 drawnPolygon\cf4 \strokec4 ) \{\cb1 \
\cb3     \cf8 \strokec8 let\cf4 \strokec4  \cf5 \strokec5 poly\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 job\cf4 \strokec4 .\cf5 \strokec5 drawnPolygon\cf4 \strokec4 ;\cb1 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 typeof\cf4 \strokec4  \cf5 \strokec5 poly\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'string'\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3         \cf5 \strokec5 poly\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 JSON\cf4 \strokec4 .\cf9 \strokec9 parse\cf4 \strokec4 (\cf5 \strokec5 poly\cf4 \strokec4 );\cb1 \
\cb3       \} \cf2 \strokec2 catch\cf4 \strokec4  \{\cb1 \
\cb3         \cf5 \strokec5 poly\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 null\cf4 \strokec4 ;\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 poly\cf4 \strokec4 ?.\cf5 \strokec5 type\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'Feature'\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 parsedPolygons\cf4 \strokec4 .\cf9 \strokec9 push\cf4 \strokec4 (\cf5 \strokec5 poly\cf4 \strokec4 .\cf5 \strokec5 geometry\cf4 \strokec4 );\cb1 \
\cb3     \} \cf2 \strokec2 else\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 poly\cf4 \strokec4 ?.\cf5 \strokec5 type\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'Polygon'\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 parsedPolygons\cf4 \strokec4 .\cf9 \strokec9 push\cf4 \strokec4 (\cf5 \strokec5 poly\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3 \} \cf2 \strokec2 catch\cf4 \strokec4  \{\cb1 \
\cb3   \cf5 \strokec5 console\cf4 \strokec4 .\cf9 \strokec9 warn\cf4 \strokec4 (\cf6 \strokec6 'Failed to parse drawnPolygon'\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\
\
\cb3   \cf7 \strokec7 // \uc0\u55357 \u56764 \u65039  Modal Layout\cf4 \cb1 \strokec4 \
\cb3   \cf2 \strokec2 return\cf4 \strokec4  (\cb1 \
\cb3     \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "fixed inset-0 z-50 bg-black bg-opacity-40 flex items-center justify-center"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3       \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "bg-white rounded-lg p-4 w-full max-w-md h-[80vh] overflow-y-auto shadow-xl relative"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3         \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 button\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 onClick\cf10 \strokec10 =\cf8 \strokec8 \{\cf5 \strokec5 onClose\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3           \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "absolute top-2 right-2 text-gray-500 hover:text-gray-700"\cf4 \cb1 \strokec4 \
\cb3         \cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3           \uc0\u10006 \cb1 \
\cb3         \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 button\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\
\cb3         \cf8 \strokec8 \{\cf7 \strokec7 /* \uc0\u55357 \u56524  Header */\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3         \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 h2\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "text-lg font-semibold mb-2"\cf14 \cb3 \strokec14 >\cf8 \cb3 \strokec8 \{\cf9 \strokec9 getJobTypeName\cf10 \strokec10 (\cf5 \strokec5 job\cf10 \strokec10 )\cf8 \strokec8 \}\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 h2\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3         \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 p\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "text-sm text-gray-600 mb-1"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 cropYear\cf8 \strokec8 \}\cf4 \strokec4  \'95 \cf8 \strokec8 \{\cf13 \strokec13 Array\cf10 \strokec10 .\cf9 \strokec9 isArray\cf10 \strokec10 (\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 fields\cf10 \strokec10 )\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10     ? \cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 fields\cf10 \strokec10 .\cf9 \strokec9 map\cf10 \strokec10 (\cf5 \strokec5 f\cf10 \strokec10  \cf8 \strokec8 =>\cf10 \strokec10  \cf5 \strokec5 f\cf10 \strokec10 .\cf5 \strokec5 fieldName\cf10 \strokec10 ).\cf9 \strokec9 filter\cf10 \strokec10 (\cf13 \strokec13 Boolean\cf10 \strokec10 ).\cf9 \strokec9 join\cf10 \strokec10 (\cf6 \strokec6 ', '\cf10 \strokec10 )\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10     : \cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 fieldName\cf10 \strokec10  || \cf6 \strokec6 'Unnamed Field'\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 p\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3         \cf8 \strokec8 \{\cf7 \strokec7 /* \uc0\u55357 \u56517  Date + Status */\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3         \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "text-xs text-gray-600 mb-2 space-x-2"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3           \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 jobDate\cf10 \strokec10  && \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 ><\cf8 \cb3 \strokec8 span\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "font-medium"\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10 Date:\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10  \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 jobDate\cf8 \strokec8 \}\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf8 \cb3 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3           \cf14 \cb3 \strokec14 <\cf13 \cb3 \strokec13 Badge\cf4 \strokec4  \cf5 \strokec5 variant\cf10 \strokec10 =\cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 status\cf10 \strokec10 ?.\cf9 \strokec9 toLowerCase\cf10 \strokec10 ()\cf8 \strokec8 \}\cf14 \cb3 \strokec14 >\cf8 \cb3 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 status\cf8 \strokec8 \}\cf14 \cb3 \strokec14 </\cf13 \cb3 \strokec13 Badge\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3         \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\
\cb3         \cf8 \strokec8 \{\cf7 \strokec7 /* \uc0\u55358 \u56810  Products */\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 products\cf10 \strokec10 ?.\cf5 \strokec5 length\cf10 \strokec10  > \cf12 \strokec12 0\cf10 \strokec10  && (\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10           \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "mb-4"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "grid grid-cols-2 font-semibold border-b pb-1 mb-1 text-xs text-gray-700"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10 Product\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10 Rate\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 products\cf10 \strokec10 .\cf9 \strokec9 map\cf10 \strokec10 ((\cf5 \strokec5 p\cf10 \strokec10 , \cf5 \strokec5 i\cf10 \strokec10 ) \cf8 \strokec8 =>\cf10 \strokec10  (\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 key\cf10 \strokec10 =\cf8 \strokec8 \{\cf5 \strokec5 i\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "grid grid-cols-2 gap-2 text-sm text-gray-800 border-b py-1"\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf8 \cb3 \strokec8 \{\cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 productName\cf10 \strokec10  || \cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 name\cf10 \strokec10  || \cf6 \strokec6 '\'97'\cf8 \strokec8 \}\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf8 \cb3 \strokec8 \{\cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 rate\cf10 \strokec10  || \cf6 \strokec6 '\'97'\cf8 \strokec8 \}\cf10 \strokec10  \cf8 \strokec8 \{\cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 unit\cf10 \strokec10  || \cf6 \strokec6 ''\cf8 \strokec8 \}\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             ))\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10           \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10         )\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3         \cf8 \strokec8 \{\cf7 \strokec7 /* \uc0\u55357 \u56439  Vendor / Applicator */\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 \{\cf10 \strokec10 (\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 vendor\cf10 \strokec10  || \cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 applicator\cf10 \strokec10 ) && (\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10           \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "mb-4 text-sm text-gray-700 space-y-1"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 vendor\cf10 \strokec10  && \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 p\cf14 \cb3 \strokec14 ><\cf8 \cb3 \strokec8 span\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "font-medium"\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10 Vendor:\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10  \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 vendor\cf8 \strokec8 \}\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 p\cf14 \cb3 \strokec14 >\cf8 \cb3 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 applicator\cf10 \strokec10  && \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 p\cf14 \cb3 \strokec14 ><\cf8 \cb3 \strokec8 span\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "font-medium"\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10 Applicator:\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10  \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 applicator\cf8 \strokec8 \}\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 p\cf14 \cb3 \strokec14 >\cf8 \cb3 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10           \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10         )\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3         \cf8 \strokec8 \{\cf7 \strokec7 /* \uc0\u55357 \u56528  Acres + Passes */\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3         \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "text-xs text-gray-600 mb-4 space-y-1"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3          \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 p\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 \{\cf10 \strokec10 (() \cf8 \strokec8 =>\cf10 \strokec10  \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10     \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 isLeveeJob\cf10 \strokec10  = (\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 jobType\cf10 \strokec10 ?.\cf5 \strokec5 name\cf10 \strokec10  || \cf6 \strokec6 ''\cf10 \strokec10 ).\cf9 \strokec9 toLowerCase\cf10 \strokec10 ().\cf9 \strokec9 includes\cf10 \strokec10 (\cf6 \strokec6 'levee'\cf10 \strokec10 ) ||\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                        (\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 jobType\cf10 \strokec10 ?.\cf5 \strokec5 name\cf10 \strokec10  || \cf6 \strokec6 ''\cf10 \strokec10 ).\cf9 \strokec9 toLowerCase\cf10 \strokec10 ().\cf9 \strokec9 includes\cf10 \strokec10 (\cf6 \strokec6 'pack'\cf10 \strokec10 );\cf4 \cb1 \strokec4 \
\
\cf10 \cb3 \strokec10     \cf2 \strokec2 if\cf10 \strokec10  (\cf11 \strokec11 isLeveeJob\cf10 \strokec10  && \cf13 \strokec13 Array\cf10 \strokec10 .\cf9 \strokec9 isArray\cf10 \strokec10 (\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 fields\cf10 \strokec10 )) \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf8 \strokec8 let\cf10 \strokec10  \cf5 \strokec5 total\cf10 \strokec10  = \cf12 \strokec12 0\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 fields\cf10 \strokec10 .\cf9 \strokec9 forEach\cf10 \strokec10 (\cf5 \strokec5 f\cf10 \strokec10  \cf8 \strokec8 =>\cf10 \strokec10  \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10         \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 crop\cf10 \strokec10  = \cf5 \strokec5 f\cf10 \strokec10 .\cf5 \strokec5 crop\cf10 \strokec10  || \cf5 \strokec5 f\cf10 \strokec10 .\cf5 \strokec5 crops\cf10 \strokec10 ?.[\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 cropYear\cf10 \strokec10 ]?.\cf5 \strokec5 crop\cf10 \strokec10  || \cf6 \strokec6 ''\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10         \cf2 \strokec2 if\cf10 \strokec10  (\cf11 \strokec11 crop\cf10 \strokec10 .\cf9 \strokec9 includes\cf10 \strokec10 (\cf6 \strokec6 'Rice'\cf10 \strokec10 )) \cf5 \strokec5 total\cf10 \strokec10  += \cf9 \strokec9 parseFloat\cf10 \strokec10 (\cf5 \strokec5 f\cf10 \strokec10 .\cf5 \strokec5 riceLeveeAcres\cf10 \strokec10  || \cf12 \strokec12 0\cf10 \strokec10 );\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10         \cf2 \strokec2 else\cf10 \strokec10  \cf2 \strokec2 if\cf10 \strokec10  (\cf11 \strokec11 crop\cf10 \strokec10 .\cf9 \strokec9 includes\cf10 \strokec10 (\cf6 \strokec6 'Soybean'\cf10 \strokec10 )) \cf5 \strokec5 total\cf10 \strokec10  += \cf9 \strokec9 parseFloat\cf10 \strokec10 (\cf5 \strokec5 f\cf10 \strokec10 .\cf5 \strokec5 beanLeveeAcres\cf10 \strokec10  || \cf12 \strokec12 0\cf10 \strokec10 );\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \});\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf2 \strokec2 return\cf10 \strokec10  \cf6 \strokec6 `\cf8 \strokec8 $\{\cf5 \strokec5 total\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 2\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  acres (Levee)`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10     \}\cf4 \cb1 \strokec4 \
\
\cf10 \cb3 \strokec10     \cf2 \strokec2 if\cf10 \strokec10  (\cf13 \strokec13 Array\cf10 \strokec10 .\cf9 \strokec9 isArray\cf10 \strokec10 (\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 fields\cf10 \strokec10 )) \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 total\cf10 \strokec10  = \cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 fields\cf10 \strokec10 .\cf9 \strokec9 reduce\cf10 \strokec10 ((\cf5 \strokec5 sum\cf10 \strokec10 , \cf5 \strokec5 f\cf10 \strokec10 ) \cf8 \strokec8 =>\cf10 \strokec10  \cf5 \strokec5 sum\cf10 \strokec10  + (\cf9 \strokec9 parseFloat\cf10 \strokec10 (\cf5 \strokec5 f\cf10 \strokec10 .\cf5 \strokec5 acres\cf10 \strokec10 ) || \cf12 \strokec12 0\cf10 \strokec10 ), \cf12 \strokec12 0\cf10 \strokec10 );\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf2 \strokec2 return\cf10 \strokec10  \cf6 \strokec6 `\cf8 \strokec8 $\{\cf11 \strokec11 total\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 2\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  acres`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10     \}\cf4 \cb1 \strokec4 \
\
\cf10 \cb3 \strokec10     \cf2 \strokec2 return\cf10 \strokec10  \cf6 \strokec6 `\cf8 \strokec8 $\{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 acres\cf10 \strokec10  ?? \cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 drawnAcres\cf10 \strokec10  ?? \cf6 \strokec6 '\'97'\cf8 \strokec8 \}\cf6 \strokec6  acres`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10   \})()\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 p\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3           \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 jobType\cf10 \strokec10 ?.\cf5 \strokec5 parentName\cf10 \strokec10  === \cf6 \strokec6 'Tillage'\cf10 \strokec10  && \cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 passes\cf10 \strokec10  && (\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10             \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 p\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10 Passes: \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 passes\cf8 \strokec8 \}\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 p\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10           )\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3         \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\
\cb3         \cf8 \strokec8 \{\cf7 \strokec7 /* \uc0\u55357 \u56826 \u65039  Map */\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3        \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "mt-4"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 \{\cf10 \strokec10 (() \cf8 \strokec8 =>\cf10 \strokec10  \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10     \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 cleanedFieldBoundaries\cf10 \strokec10  = \cf11 \strokec11 fieldBoundaries\cf10 \strokec10 .\cf9 \strokec9 filter\cf10 \strokec10 (\cf5 \strokec5 b\cf10 \strokec10  \cf8 \strokec8 =>\cf10 \strokec10  \cf5 \strokec5 b\cf10 \strokec10 ?.\cf5 \strokec5 type\cf10 \strokec10  === \cf6 \strokec6 'Polygon'\cf10 \strokec10  && \cf13 \strokec13 Array\cf10 \strokec10 .\cf9 \strokec9 isArray\cf10 \strokec10 (\cf5 \strokec5 b\cf10 \strokec10 .\cf5 \strokec5 coordinates\cf10 \strokec10 ));\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10     \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 cleanedParsedPolygons\cf10 \strokec10  = \cf5 \strokec5 parsedPolygons\cf10 \strokec10 .\cf9 \strokec9 filter\cf10 \strokec10 (\cf5 \strokec5 p\cf10 \strokec10  \cf8 \strokec8 =>\cf10 \strokec10  \cf5 \strokec5 p\cf10 \strokec10 ?.\cf5 \strokec5 type\cf10 \strokec10  === \cf6 \strokec6 'Polygon'\cf10 \strokec10  && \cf13 \strokec13 Array\cf10 \strokec10 .\cf9 \strokec9 isArray\cf10 \strokec10 (\cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 coordinates\cf10 \strokec10 ));\cf4 \cb1 \strokec4 \
\
\cf10 \cb3 \strokec10     \cf2 \strokec2 return\cf10 \strokec10  (\cf11 \strokec11 cleanedFieldBoundaries\cf10 \strokec10 .\cf5 \strokec5 length\cf10 \strokec10  > \cf12 \strokec12 0\cf10 \strokec10  || \cf11 \strokec11 cleanedParsedPolygons\cf10 \strokec10 .\cf5 \strokec5 length\cf10 \strokec10  > \cf12 \strokec12 0\cf10 \strokec10 )\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       ? \cf9 \strokec9 renderBoundarySVG\cf10 \strokec10 (\cf11 \strokec11 cleanedFieldBoundaries\cf10 \strokec10 , \cf11 \strokec11 cleanedParsedPolygons\cf10 \strokec10 )\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       : \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "text-gray-400 text-sm text-center"\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10 No map available\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10   \})()\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3         \cf8 \strokec8 \{\cf7 \strokec7 /* \uc0\u55357 \u56541  Notes */\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3         \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "mt-4"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3           \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 label\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "block text-sm font-medium mb-1"\cf14 \cb3 \strokec14 >\cf4 \cb3 \strokec4 Notes\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 label\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3           \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "text-sm text-gray-700 whitespace-pre-line border border-gray-200 rounded p-2 bg-gray-50"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3             \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 notes\cf10 \strokec10  || \cf6 \strokec6 '\'97'\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3           \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3         \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\
\cb3         \cf8 \strokec8 \{\cf7 \strokec7 /* \uc0\u55357 \u56550  Product Totals */\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 products\cf10 \strokec10 ?.\cf5 \strokec5 length\cf10 \strokec10  > \cf12 \strokec12 0\cf10 \strokec10  && (\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10           \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "mt-6 border-t pt-4"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 h4\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "font-semibold text-sm mb-2"\cf14 \cb3 \strokec14 >\cf10 \cb3 \strokec10 Product Totals\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 h4\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             \cf8 \strokec8 \{\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 products\cf10 \strokec10 .\cf9 \strokec9 map\cf10 \strokec10 ((\cf5 \strokec5 p\cf10 \strokec10 , \cf5 \strokec5 i\cf10 \strokec10 ) \cf8 \strokec8 =>\cf10 \strokec10  \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 rate\cf10 \strokec10  = \cf9 \strokec9 parseFloat\cf10 \strokec10 (\cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 rate\cf10 \strokec10 );\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 unit\cf10 \strokec10  = \cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 unit\cf10 \strokec10 ?.\cf9 \strokec9 toLowerCase\cf10 \strokec10 () || \cf6 \strokec6 ''\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 crop\cf10 \strokec10  = \cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 crop\cf10 \strokec10 ?.\cf9 \strokec9 toLowerCase\cf10 \strokec10 ?.() || \cf6 \strokec6 ''\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 acres\cf10 \strokec10  = \cf13 \strokec13 Array\cf10 \strokec10 .\cf9 \strokec9 isArray\cf10 \strokec10 (\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 fields\cf10 \strokec10 )\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10   ? \cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 fields\cf10 \strokec10 .\cf9 \strokec9 reduce\cf10 \strokec10 ((\cf5 \strokec5 sum\cf10 \strokec10 , \cf5 \strokec5 f\cf10 \strokec10 ) \cf8 \strokec8 =>\cf10 \strokec10  \cf5 \strokec5 sum\cf10 \strokec10  + (\cf9 \strokec9 parseFloat\cf10 \strokec10 (\cf5 \strokec5 f\cf10 \strokec10 .\cf5 \strokec5 acres\cf10 \strokec10 ) || \cf12 \strokec12 0\cf10 \strokec10 ), \cf12 \strokec12 0\cf10 \strokec10 )\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10   : (\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 acres\cf10 \strokec10  || \cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 drawnAcres\cf10 \strokec10  || \cf12 \strokec12 0\cf10 \strokec10 );\cf4 \cb1 \strokec4 \
\
\cf10 \cb3 \strokec10               \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 totalAmount\cf10 \strokec10  = \cf11 \strokec11 rate\cf10 \strokec10  * \cf11 \strokec11 acres\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \cf8 \strokec8 let\cf10 \strokec10  \cf5 \strokec5 display\cf10 \strokec10  = \cf6 \strokec6 ''\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\
\cf10 \cb3 \strokec10               \cf2 \strokec2 if\cf10 \strokec10  ([\cf6 \strokec6 'seeds/acre'\cf10 \strokec10 , \cf6 \strokec6 'population'\cf10 \strokec10 ].\cf9 \strokec9 includes\cf10 \strokec10 (\cf11 \strokec11 unit\cf10 \strokec10 )) \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 seedsPerUnit\cf10 \strokec10  = \cf11 \strokec11 crop\cf10 \strokec10 .\cf9 \strokec9 includes\cf10 \strokec10 (\cf6 \strokec6 'rice'\cf10 \strokec10 ) ? \cf12 \strokec12 900000\cf10 \strokec10  : \cf11 \strokec11 crop\cf10 \strokec10 .\cf9 \strokec9 includes\cf10 \strokec10 (\cf6 \strokec6 'soybean'\cf10 \strokec10 ) ? \cf12 \strokec12 140000\cf10 \strokec10  : \cf12 \strokec12 1000000\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 totalSeeds\cf10 \strokec10  = \cf11 \strokec11 rate\cf10 \strokec10  * \cf11 \strokec11 acres\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 units\cf10 \strokec10  = \cf11 \strokec11 totalSeeds\cf10 \strokec10  / \cf11 \strokec11 seedsPerUnit\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 display\cf10 \strokec10  = \cf6 \strokec6 `\cf8 \strokec8 $\{\cf11 \strokec11 units\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 1\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  units`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \} \cf2 \strokec2 else\cf10 \strokec10  \cf2 \strokec2 if\cf10 \strokec10  ([\cf6 \strokec6 'lbs/acre'\cf10 \strokec10 ].\cf9 \strokec9 includes\cf10 \strokec10 (\cf11 \strokec11 unit\cf10 \strokec10 )) \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 lbsPerBushel\cf10 \strokec10  = \cf11 \strokec11 crop\cf10 \strokec10 .\cf9 \strokec9 includes\cf10 \strokec10 (\cf6 \strokec6 'rice'\cf10 \strokec10 ) ? \cf12 \strokec12 45\cf10 \strokec10  : \cf11 \strokec11 crop\cf10 \strokec10 .\cf9 \strokec9 includes\cf10 \strokec10 (\cf6 \strokec6 'soybean'\cf10 \strokec10 ) ? \cf12 \strokec12 60\cf10 \strokec10  : \cf12 \strokec12 50\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 bushels\cf10 \strokec10  = \cf11 \strokec11 totalAmount\cf10 \strokec10  / \cf11 \strokec11 lbsPerBushel\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 display\cf10 \strokec10  = \cf6 \strokec6 `\cf8 \strokec8 $\{\cf11 \strokec11 bushels\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 1\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  bushels`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \} \cf2 \strokec2 else\cf10 \strokec10  \cf2 \strokec2 if\cf10 \strokec10  ([\cf6 \strokec6 'fl oz/acre'\cf10 \strokec10 , \cf6 \strokec6 'oz/acre'\cf10 \strokec10 ].\cf9 \strokec9 includes\cf10 \strokec10 (\cf11 \strokec11 unit\cf10 \strokec10 )) \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 gal\cf10 \strokec10  = \cf11 \strokec11 totalAmount\cf10 \strokec10  / \cf12 \strokec12 128\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 display\cf10 \strokec10  = \cf6 \strokec6 `\cf8 \strokec8 $\{\cf11 \strokec11 gal\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 2\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  gallons`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \} \cf2 \strokec2 else\cf10 \strokec10  \cf2 \strokec2 if\cf10 \strokec10  (\cf11 \strokec11 unit\cf10 \strokec10  === \cf6 \strokec6 'pt/acre'\cf10 \strokec10 ) \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 gal\cf10 \strokec10  = \cf11 \strokec11 totalAmount\cf10 \strokec10  / \cf12 \strokec12 8\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 display\cf10 \strokec10  = \cf6 \strokec6 `\cf8 \strokec8 $\{\cf11 \strokec11 gal\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 2\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  gallons`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \} \cf2 \strokec2 else\cf10 \strokec10  \cf2 \strokec2 if\cf10 \strokec10  (\cf11 \strokec11 unit\cf10 \strokec10  === \cf6 \strokec6 'qt/acre'\cf10 \strokec10 ) \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 gal\cf10 \strokec10  = \cf11 \strokec11 totalAmount\cf10 \strokec10  / \cf12 \strokec12 4\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 display\cf10 \strokec10  = \cf6 \strokec6 `\cf8 \strokec8 $\{\cf11 \strokec11 gal\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 2\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  gallons`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \} \cf2 \strokec2 else\cf10 \strokec10  \cf2 \strokec2 if\cf10 \strokec10  (\cf11 \strokec11 unit\cf10 \strokec10  === \cf6 \strokec6 'oz dry/acre'\cf10 \strokec10 ) \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 lbs\cf10 \strokec10  = \cf11 \strokec11 totalAmount\cf10 \strokec10  / \cf12 \strokec12 16\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 display\cf10 \strokec10  = \cf6 \strokec6 `\cf8 \strokec8 $\{\cf11 \strokec11 lbs\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 2\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  lbs`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \} \cf2 \strokec2 else\cf10 \strokec10  \cf2 \strokec2 if\cf10 \strokec10  (\cf11 \strokec11 unit\cf10 \strokec10  === \cf6 \strokec6 '%v/v'\cf10 \strokec10 ) \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 water\cf10 \strokec10  = \cf9 \strokec9 parseFloat\cf10 \strokec10 (\cf5 \strokec5 job\cf10 \strokec10 .\cf5 \strokec5 waterVolume\cf10 \strokec10  || \cf12 \strokec12 0\cf10 \strokec10 );\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf8 \strokec8 const\cf10 \strokec10  \cf11 \strokec11 gal\cf10 \strokec10  = (\cf11 \strokec11 rate\cf10 \strokec10  / \cf12 \strokec12 100\cf10 \strokec10 ) * \cf11 \strokec11 water\cf10 \strokec10  * \cf11 \strokec11 acres\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 display\cf10 \strokec10  = \cf6 \strokec6 `\cf8 \strokec8 $\{\cf11 \strokec11 gal\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 2\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  gallons`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \} \cf2 \strokec2 else\cf10 \strokec10  \cf2 \strokec2 if\cf10 \strokec10  (\cf11 \strokec11 unit\cf10 \strokec10  === \cf6 \strokec6 'tons/acre'\cf10 \strokec10 ) \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 display\cf10 \strokec10  = \cf6 \strokec6 `\cf8 \strokec8 $\{\cf11 \strokec11 totalAmount\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 2\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  tons`\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \} \cf2 \strokec2 else\cf10 \strokec10  \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf5 \strokec5 display\cf10 \strokec10  = \cf6 \strokec6 `\cf8 \strokec8 $\{\cf11 \strokec11 totalAmount\cf10 \strokec10 .\cf9 \strokec9 toFixed\cf10 \strokec10 (\cf12 \strokec12 1\cf10 \strokec10 )\cf8 \strokec8 \}\cf6 \strokec6  \cf8 \strokec8 $\{\cf11 \strokec11 unit\cf10 \strokec10 .\cf9 \strokec9 replace\cf10 \strokec10 (\cf6 \strokec6 '/acre'\cf10 \strokec10 , \cf6 \strokec6 ''\cf10 \strokec10 ).\cf9 \strokec9 trim\cf10 \strokec10 ()\cf8 \strokec8 \}\cf6 \strokec6 `\cf10 \strokec10 ;\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               \}\cf4 \cb1 \strokec4 \
\
\cf10 \cb3 \strokec10               \cf2 \strokec2 return\cf10 \strokec10  (\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 div\cf10 \strokec10  \cf5 \strokec5 key\cf10 \strokec10 =\cf8 \strokec8 \{\cf5 \strokec5 i\cf8 \strokec8 \}\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "text-sm text-gray-700"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                   \cf8 \strokec8 \{\cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 productName\cf10 \strokec10  || \cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 name\cf10 \strokec10  || \cf6 \strokec6 'Unnamed'\cf8 \strokec8 \}\cf10 \strokec10  \uc0\u8594  \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 span\cf10 \strokec10  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "font-mono"\cf14 \cb3 \strokec14 >\cf8 \cb3 \strokec8 \{\cf5 \strokec5 display\cf8 \strokec8 \}\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 span\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10                 \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10               );\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             \})\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10           \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10         )\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3       \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3     \cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 div\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3   );\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 function\cf4 \strokec4  \cf9 \strokec9 renderBoundarySVG\cf4 \strokec4 (\cf5 \strokec5 baseGeometries\cf4 \strokec4 , \cf5 \strokec5 overlayGeoJSONList\cf4 \strokec4 ) \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 if\cf4 \strokec4  (\cf10 \strokec10 !\cf13 \strokec13 Array\cf4 \strokec4 .\cf9 \strokec9 isArray\cf4 \strokec4 (\cf5 \strokec5 baseGeometries\cf4 \strokec4 ) \cf10 \strokec10 ||\cf4 \strokec4  \cf5 \strokec5 baseGeometries\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf12 \strokec12 0\cf4 \strokec4 ) \cf2 \strokec2 return\cf4 \strokec4  \cf8 \strokec8 null\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 boxSize\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf12 \strokec12 300\cf4 \strokec4 ;\cb1 \
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 margin\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf12 \strokec12 10\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 allCoords\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  [\cb1 \
\cb3   \cf10 \strokec10 ...\cf5 \strokec5 baseGeometries\cf4 \strokec4 .\cf9 \strokec9 flatMap\cf4 \strokec4 (\cf5 \strokec5 g\cf4 \strokec4  \cf8 \strokec8 =>\cf4 \strokec4  \cf5 \strokec5 g\cf4 \strokec4 ?.\cf5 \strokec5 coordinates\cf4 \strokec4 ?.[\cf12 \strokec12 0\cf4 \strokec4 ] \cf10 \strokec10 ||\cf4 \strokec4  []),\cb1 \
\cb3   \cf10 \strokec10 ...\cf4 \strokec4 (\cf5 \strokec5 overlayGeoJSONList\cf4 \strokec4  \cf10 \strokec10 ||\cf4 \strokec4  []).\cf9 \strokec9 flatMap\cf4 \strokec4 (\cf5 \strokec5 g\cf4 \strokec4  \cf8 \strokec8 =>\cf4 \strokec4  \cf5 \strokec5 g\cf4 \strokec4 ?.\cf5 \strokec5 coordinates\cf4 \strokec4 ?.[\cf12 \strokec12 0\cf4 \strokec4 ] \cf10 \strokec10 ||\cf4 \strokec4  [])\cb1 \
\cb3 ];\cb1 \
\
\
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 bounds\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf11 \strokec11 allCoords\cf4 \strokec4 .\cf9 \strokec9 reduce\cf4 \strokec4 ((\cf5 \strokec5 acc\cf4 \strokec4 , [\cf5 \strokec5 lng\cf4 \strokec4 , \cf5 \strokec5 lat\cf4 \strokec4 ]) \cf8 \strokec8 =>\cf4 \strokec4  (\{\cb1 \
\cb3     \cf5 \strokec5 minX:\cf4 \strokec4  \cf5 \strokec5 Math\cf4 \strokec4 .\cf9 \strokec9 min\cf4 \strokec4 (\cf5 \strokec5 acc\cf4 \strokec4 .\cf5 \strokec5 minX\cf4 \strokec4 , \cf5 \strokec5 lng\cf4 \strokec4 ),\cb1 \
\cb3     \cf5 \strokec5 maxX:\cf4 \strokec4  \cf5 \strokec5 Math\cf4 \strokec4 .\cf9 \strokec9 max\cf4 \strokec4 (\cf5 \strokec5 acc\cf4 \strokec4 .\cf5 \strokec5 maxX\cf4 \strokec4 , \cf5 \strokec5 lng\cf4 \strokec4 ),\cb1 \
\cb3     \cf5 \strokec5 minY:\cf4 \strokec4  \cf5 \strokec5 Math\cf4 \strokec4 .\cf9 \strokec9 min\cf4 \strokec4 (\cf5 \strokec5 acc\cf4 \strokec4 .\cf5 \strokec5 minY\cf4 \strokec4 , \cf5 \strokec5 lat\cf4 \strokec4 ),\cb1 \
\cb3     \cf5 \strokec5 maxY:\cf4 \strokec4  \cf5 \strokec5 Math\cf4 \strokec4 .\cf9 \strokec9 max\cf4 \strokec4 (\cf5 \strokec5 acc\cf4 \strokec4 .\cf5 \strokec5 maxY\cf4 \strokec4 , \cf5 \strokec5 lat\cf4 \strokec4 ),\cb1 \
\cb3   \}), \{ \cf5 \strokec5 minX:\cf4 \strokec4  \cf8 \strokec8 Infinity\cf4 \strokec4 , \cf5 \strokec5 maxX:\cf4 \strokec4  \cf10 \strokec10 -\cf8 \strokec8 Infinity\cf4 \strokec4 , \cf5 \strokec5 minY:\cf4 \strokec4  \cf8 \strokec8 Infinity\cf4 \strokec4 , \cf5 \strokec5 maxY:\cf4 \strokec4  \cf10 \strokec10 -\cf8 \strokec8 Infinity\cf4 \strokec4  \});\cb1 \
\
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 width\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf11 \strokec11 bounds\cf4 \strokec4 .\cf5 \strokec5 maxX\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf11 \strokec11 bounds\cf4 \strokec4 .\cf5 \strokec5 minX\cf4 \strokec4  \cf10 \strokec10 ||\cf4 \strokec4  \cf12 \strokec12 1\cf4 \strokec4 ;\cb1 \
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 height\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf11 \strokec11 bounds\cf4 \strokec4 .\cf5 \strokec5 maxY\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf11 \strokec11 bounds\cf4 \strokec4 .\cf5 \strokec5 minY\cf4 \strokec4  \cf10 \strokec10 ||\cf4 \strokec4  \cf12 \strokec12 1\cf4 \strokec4 ;\cb1 \
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 scale\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  (\cf11 \strokec11 boxSize\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf11 \strokec11 margin\cf4 \strokec4  \cf10 \strokec10 *\cf4 \strokec4  \cf12 \strokec12 2\cf4 \strokec4 ) \cf10 \strokec10 /\cf4 \strokec4  \cf5 \strokec5 Math\cf4 \strokec4 .\cf9 \strokec9 max\cf4 \strokec4 (\cf11 \strokec11 width\cf4 \strokec4 , \cf11 \strokec11 height\cf4 \strokec4 );\cb1 \
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 xOffset\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  (\cf11 \strokec11 boxSize\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf11 \strokec11 width\cf4 \strokec4  \cf10 \strokec10 *\cf4 \strokec4  \cf11 \strokec11 scale\cf4 \strokec4 ) \cf10 \strokec10 /\cf4 \strokec4  \cf12 \strokec12 2\cf4 \strokec4 ;\cb1 \
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 yOffset\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  (\cf11 \strokec11 boxSize\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf11 \strokec11 height\cf4 \strokec4  \cf10 \strokec10 *\cf4 \strokec4  \cf11 \strokec11 scale\cf4 \strokec4 ) \cf10 \strokec10 /\cf4 \strokec4  \cf12 \strokec12 2\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf9 \strokec9 project\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  ([\cf5 \strokec5 lng\cf4 \strokec4 , \cf5 \strokec5 lat\cf4 \strokec4 ]) \cf8 \strokec8 =>\cf4 \strokec4  (\{\cb1 \
\cb3     \cf5 \strokec5 x:\cf4 \strokec4  (\cf5 \strokec5 lng\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf11 \strokec11 bounds\cf4 \strokec4 .\cf5 \strokec5 minX\cf4 \strokec4 ) \cf10 \strokec10 *\cf4 \strokec4  \cf11 \strokec11 scale\cf4 \strokec4  \cf10 \strokec10 +\cf4 \strokec4  \cf11 \strokec11 xOffset\cf4 \strokec4 ,\cb1 \
\cb3     \cf5 \strokec5 y:\cf4 \strokec4  \cf11 \strokec11 boxSize\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  ((\cf5 \strokec5 lat\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf11 \strokec11 bounds\cf4 \strokec4 .\cf5 \strokec5 minY\cf4 \strokec4 ) \cf10 \strokec10 *\cf4 \strokec4  \cf11 \strokec11 scale\cf4 \strokec4  \cf10 \strokec10 +\cf4 \strokec4  \cf11 \strokec11 yOffset\cf4 \strokec4 ),\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf9 \strokec9 pathFromCoords\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  (\cf5 \strokec5 coords\cf4 \strokec4 ) \cf8 \strokec8 =>\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 coords\cf4 \strokec4 .\cf9 \strokec9 map\cf4 \strokec4 ((\cf5 \strokec5 pt\cf4 \strokec4 , \cf5 \strokec5 i\cf4 \strokec4 ) \cf8 \strokec8 =>\cf4 \strokec4  \{\cb1 \
\cb3       \cf8 \strokec8 const\cf4 \strokec4  \{ \cf11 \strokec11 x\cf4 \strokec4 , \cf11 \strokec11 y\cf4 \strokec4  \} \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 project\cf4 \strokec4 (\cf5 \strokec5 pt\cf4 \strokec4 );\cb1 \
\cb3       \cf2 \strokec2 return\cf4 \strokec4  \cf6 \strokec6 `\cf8 \strokec8 $\{\cf5 \strokec5 i\cf10 \strokec10  === \cf12 \strokec12 0\cf10 \strokec10  ? \cf6 \strokec6 'M'\cf10 \strokec10  : \cf6 \strokec6 'L'\cf8 \strokec8 \}$\{\cf11 \strokec11 x\cf8 \strokec8 \}\cf6 \strokec6 ,\cf8 \strokec8 $\{\cf11 \strokec11 y\cf8 \strokec8 \}\cf6 \strokec6 `\cf4 \strokec4 ;\cb1 \
\cb3     \}).\cf9 \strokec9 join\cf4 \strokec4 (\cf6 \strokec6 ' '\cf4 \strokec4 ) \cf10 \strokec10 +\cf4 \strokec4  \cf6 \strokec6 ' Z'\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 paths\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  [];\cb1 \
\
\cb3   \cf7 \strokec7 // \uc0\u55357 \u57317  Field boundaries (base polygons)\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 baseGeometries\cf4 \strokec4 .\cf9 \strokec9 forEach\cf4 \strokec4 (\cf5 \strokec5 geo\cf4 \strokec4  \cf8 \strokec8 =>\cf4 \strokec4  \{\cb1 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 geo\cf4 \strokec4 ?.\cf5 \strokec5 coordinates\cf4 \strokec4 ?.[\cf12 \strokec12 0\cf4 \strokec4 ]) \{\cb1 \
\cb3       \cf11 \strokec11 paths\cf4 \strokec4 .\cf9 \strokec9 push\cf4 \strokec4 (\{\cb1 \
\cb3         \cf5 \strokec5 type:\cf4 \strokec4  \cf6 \strokec6 'base'\cf4 \strokec4 ,\cb1 \
\cb3         \cf5 \strokec5 d:\cf4 \strokec4  \cf9 \strokec9 pathFromCoords\cf4 \strokec4 (\cf5 \strokec5 geo\cf4 \strokec4 .\cf5 \strokec5 coordinates\cf4 \strokec4 [\cf12 \strokec12 0\cf4 \strokec4 ]),\cb1 \
\cb3       \});\cb1 \
\cb3     \}\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf7 \strokec7 // \uc0\u55357 \u57321  Drawn overlays (application zones)\cf4 \cb1 \strokec4 \
\cb3   (\cf5 \strokec5 overlayGeoJSONList\cf4 \strokec4  \cf10 \strokec10 ||\cf4 \strokec4  []).\cf9 \strokec9 forEach\cf4 \strokec4 (\cf5 \strokec5 overlay\cf4 \strokec4  \cf8 \strokec8 =>\cf4 \strokec4  \{\cb1 \
\cb3     \cf8 \strokec8 const\cf4 \strokec4  \cf11 \strokec11 poly\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf5 \strokec5 overlay\cf4 \strokec4 ?.\cf5 \strokec5 type\cf4 \strokec4  \cf10 \strokec10 ===\cf4 \strokec4  \cf6 \strokec6 'Feature'\cf4 \strokec4  \cf10 \strokec10 ?\cf4 \strokec4  \cf5 \strokec5 overlay\cf4 \strokec4 .\cf5 \strokec5 geometry\cf4 \strokec4  \cf10 \strokec10 :\cf4 \strokec4  \cf5 \strokec5 overlay\cf4 \strokec4 ;\cb1 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  (\cf11 \strokec11 poly\cf4 \strokec4 ?.\cf5 \strokec5 coordinates\cf4 \strokec4 ?.[\cf12 \strokec12 0\cf4 \strokec4 ]) \{\cb1 \
\cb3       \cf11 \strokec11 paths\cf4 \strokec4 .\cf9 \strokec9 push\cf4 \strokec4 (\{\cb1 \
\cb3         \cf5 \strokec5 type:\cf4 \strokec4  \cf6 \strokec6 'overlay'\cf4 \strokec4 ,\cb1 \
\cb3         \cf5 \strokec5 d:\cf4 \strokec4  \cf9 \strokec9 pathFromCoords\cf4 \strokec4 (\cf11 \strokec11 poly\cf4 \strokec4 .\cf5 \strokec5 coordinates\cf4 \strokec4 [\cf12 \strokec12 0\cf4 \strokec4 ]),\cb1 \
\cb3       \});\cb1 \
\cb3     \}\cb1 \
\cb3   \});\cb1 \
\
\cb3   \cf2 \strokec2 return\cf4 \strokec4  (\cb1 \
\cb3     \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 svg\cf4 \strokec4  \cf5 \strokec5 viewBox\cf10 \strokec10 =\cf8 \strokec8 \{\cf6 \strokec6 `0 0 \cf8 \strokec8 $\{\cf11 \strokec11 boxSize\cf8 \strokec8 \}\cf6 \strokec6  \cf8 \strokec8 $\{\cf11 \strokec11 boxSize\cf8 \strokec8 \}\cf6 \strokec6 `\cf8 \strokec8 \}\cf4 \strokec4  \cf5 \strokec5 className\cf10 \strokec10 =\cf6 \strokec6 "w-full max-w-xs bg-white border rounded shadow mx-auto"\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\cb3    \cf8 \strokec8 \{\cf11 \strokec11 paths\cf10 \strokec10 .\cf9 \strokec9 map\cf10 \strokec10 ((\cf5 \strokec5 p\cf10 \strokec10 , \cf5 \strokec5 i\cf10 \strokec10 ) \cf8 \strokec8 =>\cf10 \strokec10  (\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb3 \strokec10     \cf14 \cb3 \strokec14 <\cf8 \cb3 \strokec8 path\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf5 \strokec5 key\cf10 \strokec10 =\cf8 \strokec8 \{\cf5 \strokec5 i\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf5 \strokec5 d\cf10 \strokec10 =\cf8 \strokec8 \{\cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 d\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf5 \strokec5 fill\cf10 \strokec10 =\cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10         \cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 type\cf10 \strokec10  === \cf6 \strokec6 'overlay'\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10           ? \cf6 \strokec6 '#34D399'\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10           : \cf5 \strokec5 overlayGeoJSONList\cf10 \strokec10 ?.\cf5 \strokec5 length\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             ? \cf6 \strokec6 '#F87171'\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10             : \cf6 \strokec6 '#34D399'\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf5 \strokec5 fillOpacity\cf10 \strokec10 =\cf8 \strokec8 \{\cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 type\cf10 \strokec10  === \cf6 \strokec6 'overlay'\cf10 \strokec10  ? \cf12 \strokec12 0.6\cf10 \strokec10  : \cf12 \strokec12 0.2\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf5 \strokec5 stroke\cf10 \strokec10 =\cf8 \strokec8 \{\cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 type\cf10 \strokec10  === \cf6 \strokec6 'overlay'\cf10 \strokec10  ? \cf6 \strokec6 '#047857'\cf10 \strokec10  : \cf6 \strokec6 '#4B5563'\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10       \cf5 \strokec5 strokeWidth\cf10 \strokec10 =\cf8 \strokec8 \{\cf5 \strokec5 p\cf10 \strokec10 .\cf5 \strokec5 type\cf10 \strokec10  === \cf6 \strokec6 'overlay'\cf10 \strokec10  ? \cf12 \strokec12 2\cf10 \strokec10  : \cf12 \strokec12 1.5\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10     \cf14 \cb3 \strokec14 />\cf4 \cb1 \strokec4 \
\cf10 \cb3 \strokec10   ))\cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf14 \cb3 \strokec14 </\cf8 \cb3 \strokec8 svg\cf14 \cb3 \strokec14 >\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   );\cb1 \
\cb3 \}\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 export\cf4 \strokec4  \cf2 \strokec2 default\cf4 \strokec4  \cf9 \strokec9 JobDetailsModal\cf4 \strokec4 ;\cb1 \
\
}